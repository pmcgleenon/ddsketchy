name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  # Test different feature combinations and platforms
  test:
    name: Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable, beta, 1.81.0]
        features: ["", "serde"]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
    - uses: Swatinem/rust-cache@v2

    - name: Build (no features)
      if: matrix.features == ''
      run: cargo build --verbose

    - name: Build (with features)
      if: matrix.features != ''
      run: cargo build --verbose --features ${{ matrix.features }}

    - name: Test (no features)
      if: matrix.features == ''
      run: cargo test --verbose

    - name: Test (with features)
      if: matrix.features != ''
      run: cargo test --verbose --features ${{ matrix.features }}

  # Code quality checks
  quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    - uses: Swatinem/rust-cache@v2

    - name: Format check
      run: cargo fmt --all -- --check

    - name: Clippy (no features)
      run: cargo clippy --all-targets --no-deps -- -D warnings

    - name: Clippy (all features)
      run: cargo clippy --all-targets --all-features --no-deps -- -D warnings

  # Documentation and examples
  docs:
    name: Documentation
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2

    - name: Build docs (no features)
      run: cargo doc --no-deps --document-private-items

    - name: Build docs (all features)
      run: cargo doc --no-deps --document-private-items --all-features

    - name: Test doc examples
      run: cargo test --doc --all-features

    - name: Build examples
      run: cargo build --examples --verbose

    - name: Run all examples
      run: |
        cargo run --example readme_example
        cargo run --example compare_serialization --features serde
        cargo run --example readme_serde_example --features serde
        cargo run --example debug_serde --features serde

  # Security audit
  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2

    - name: Install cargo-audit
      run: cargo install cargo-audit

    - name: Security audit
      run: cargo audit

  # Benchmark validation (just check they compile and run)
  benchmarks:
    name: Benchmarks
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2

    - name: Build benchmarks
      run: cargo bench --no-run

    - name: Run benchmarks (quick validation)
      run: |
        timeout 30s cargo bench -- --quick || true
        echo "Benchmark validation completed"
